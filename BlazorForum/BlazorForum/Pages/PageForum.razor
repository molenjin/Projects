@page "/forum"

@using BlazorForum.Data
@using BlazorForum.Database
@using BlazorForum.Libraries

@inject IDatabaseCalls DatabaseCalls
@inject LibFormat LibData
@inject LibFormat LibFormat

<PageTitle>Forum</PageTitle>

<h1>Forum (@numOfTopics)</h1>

<br />

<button class="btn btn-primary" @onclick=OnLoadTopicListAsync>Load</button>

<br />
<br />

@if (@topicList != null)
{
    foreach (var topic in @topicList)
    {
        string topicTitle = LibFormat.HtmlDecode(topic.Title);
        string topicName = LibFormat.HtmlDecode(topic.Name);
        string topicLink = $"/topic/{topic.Id}/{LibFormat.TitleLink(topic.Title)}{LibFormat.NumberOfCommentsLink(topic.NumOfComments)}";
        string topicHidden = LibFormat.HiddenText(topic.Hidden);

        <span>@topicHidden<a href=@topicLink>@topicTitle</a> - @topicName</span>

        if (@LibFormat.FlagExists(@topic.CountryCode))
        {
            <span>&nbsp;<img src=@LibFormat.FlagLink(@topic.CountryCode)></span>
        }
        <span>&nbsp;@LibFormat.NumberOfCommentsText(@topic.NumOfComments)</span>
        <br />
    }
}


@code {
    int numOfTopics = 0;
    List<Topic>? topicList;

    async Task OnLoadTopicListAsync()
    {     
        try
        {
            numOfTopics = await DatabaseCalls.GetNumOfTopicsAsync(true);
            topicList = await DatabaseCalls.GetTopicListAsync(true, 1, 50);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }
}
