@page "/new"

@using BlazorForum.Data
@using BlazorForum.Database
@using BlazorForum.Libraries
@using BlazorForum.Components

@inject IDatabaseCalls DatabaseCalls
@inject LibValidate LibValidate
@inject LibExternal LibExternal

<PageTitle>New Topic</PageTitle>

<div class="forum_content">
    <div class="forum">

        <CompForumHeader ForumLinkOn=true ActionTitle="New Topic" ActionLinkOn=false></CompForumHeader>

        <br />
        <br />

        <div class="panel">
            <EditForm FormName="Hello" Model="this" OnSubmit="SubmitAsync">                
                @* User name ----------------------------------------- *@
                <div class="column20 right-desktop">User name&nbsp;&nbsp;</div>
                <div class="column paddingR-10">
                    <InputText @bind-Value="comment.Name" class="textfield" tabindex="1" size="40" maxlength="20" />
                </div>
                <div class="spacer4"></div>
                @* Title --------------------------------------------- *@
                <div class="column20 right-desktop">Title&nbsp;&nbsp;</div>
                <div class="column paddingR-10">
                    <InputText @bind-Value="comment.Title" class="textfield" tabindex="2" size="40" maxlength="60" />
                </div>
                <div class="spacer4"></div>
                @* Text ---------------------------------------------- *@
                <div class="column20 right-desktop">Text&nbsp;&nbsp;</div>
                <div class="column paddingR-10">
                    <InputTextArea @bind-Value="comment.Text" class="textarea" tabindex="3" rows="20" maxlength="5000" />
                </div>
                <div class="spacer4"></div>
                @* Submit -------------------------------------------- *@
                <div class="column20 right-desktop">&nbsp;</div>
                <div class="column paddingR-10">
                    <button class="btn btn-primary" type="submit">Submit</button>
                    <br />
                    <br />
                    <p class="text-danger">@errorMessage</p>
                </div>
            </EditForm>
        </div>

    </div>
</div>

@code {
    private Comment comment = new Comment();
    private string errorMessage = string.Empty;

    private async Task SubmitAsync()
    {
        IpInfo ipInfo = await LibExternal.GetIpInfoAsync();

        try
        {
            // Validate the input fields
            (bool result, string message) = await LibValidate.IsCommentValidAsync(comment);
            if (result != true)
            {
                errorMessage = message;
                return;
            }

            // Make sure the comment is new
            if (await DatabaseCalls.IsDuplicatedCommentAsync(comment.Text))
            {
                errorMessage = "This comment already exists";
                return;
            }

            int userId = await DatabaseCalls.GetUserIdAsync(comment.Name, comment.IP);

            if (userId == 0)
            {
                userId = await DatabaseCalls.GetNextUserIdAsync();
                
                await DatabaseCalls.SaveUserAsync(new User() 
                { 
                    Id = userId,
                    Name = comment.Name,
                    CountryCode = ipInfo.CountryCode,
                    IP = ipInfo.Ip,
                    Active = true,
                    Moderator = false
                });
            }

            comment.Id = await DatabaseCalls.GetNextCommentIdAsync();
            comment.TopicId = null;
            comment.Title = comment.Title.Trim();
            comment.Text = comment.Text.Trim();
            comment.UserId = userId;
            comment.Hidden = false;
            comment.Closed = false;

            await DatabaseCalls.SaveCommentAsync(comment);
        }
        catch (Exception ex)
        {
            // Handle validation errors
        }
    }
}
