@page "/topic/{Id:int}/{Title}/{NumOfComments:int?}"

@using BlazorForum.Data
@using BlazorForum.Database
@using BlazorForum.Libraries

@inject IDatabaseCalls DatabaseCalls
@inject LibData LibData
@inject LibFormat LibFormat

<PageTitle>Topic</PageTitle>

<h1>@LibFormat.HtmlDecode(@topicTitle)</h1>

@if (@commentList != null)
{
    foreach (var comment in @commentList)
    {
        <span>@LibFormat.HtmlDecode(@comment.Name)</span>
        <br/>
        <span><img src=@LibFormat.FlagLink(@comment.CountryCode)> @LibData.CountryName(@comment.CountryCode)</span>
        <br />
        <span>@LibFormat.HtmlDecode(@comment.Text)</span>
        <br />
        <br />
    }
}


@code {
    [Parameter]
    public int Id { get; set; }

    [Parameter]
    public string Title { get; set; } = String.Empty;

    [Parameter]
    public int NumOfComments { get; set; }

    List<Comment>? commentList;
    string topicTitle = String.Empty;
    bool topicClosed;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        try
        {
            commentList = await DatabaseCalls.GetCommentListAsync(Id);

            if (commentList.Count > 0)
            {
                topicTitle = commentList.First().Title;
                topicClosed = commentList.First().Closed;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }
}
